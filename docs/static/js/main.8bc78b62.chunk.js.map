{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"+MAoCeA,EAjCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAmBzC,OACI,0BAAMC,SAZW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,OAOhB,2BACEO,KAAK,OACLC,MAAQT,EACRU,SApBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCNnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGII,MAAOF,GAHX,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAIFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAkBZM,GAlBY,4CAAH,sDCAHO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,2BAAKA,KCFRO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEdd,mBAAU,CAChCqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAdAC,qBAAU,WAENxB,EAASC,GACRwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAEGqB,EDnB0BK,CAAc1B,GAAjCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAElDoB,GAAW,uBAAGJ,UAAU,2CAAb,cAEb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAEJ,OAAO,kBAAC,EAAD,eACKiB,IAAMjB,EAAIC,IACLD,UEdhCkB,EAAe,WAAO,IAAD,EAEM1C,mBAAU,CAAC,gBAFjB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAI9B,OACI,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEMS,EACCe,KAAI,SAAAT,GACH,OAAO,kBAAC,EAAD,CACO2B,IAAM3B,EACNA,SAAWA,UChB3C6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8bc78b62.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        // Previene el comportamiento por default del formulario que es el de enviarlo\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories( categories => [ inputValue, ...categories ] );\r\n            setInputValue('');\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n          <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }/>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired \r\n}\r\n\r\nexport default AddCategory;","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=RLWNumSL4iXN9AY79vTPwfhWbz1zqerV`;\r\n    const response = await fetch( url );\r\n    const { data } = await response.json();\r\n\r\n    //console.log( data );\r\n\r\n    const gifs = data.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n\r\n    });\r\n\r\n    return gifs;\r\n\r\n};","    import React from 'react'\r\n    \r\n    export const GifGridItem = ( {id, title, url} ) => {\r\n        return (\r\n            <div className=\"card animate__animated animate__fadeIn\">\r\n                <img src={ url } alt={title} />\r\n                <p>{ title }</p>\r\n            </div>\r\n        );\r\n    }\r\n    ","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data: images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__bounceInLeft\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => \r\n                        {\r\n                            return <GifGridItem \r\n                                        key={ img.id }\r\n                                        { ...img } />\r\n                        }\r\n                    )\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState( {\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    // Los effectos no pueden ser async\r\n    useEffect(() =>{\r\n        \r\n        getGifs( category )\r\n        .then(imgs => {\r\n            \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n\r\n        });\r\n\r\n    }, [category]);\r\n\r\n    return state; // { data: [], loading: true }\r\n\r\n}","//Con el snippet rafc se crea más rápido\r\n\r\nimport React, { useState }from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['Dragon Ball'] );\r\n\r\n    return (\r\n        <>\r\n          <h2>Gif Expert App</h2>\r\n          <AddCategory setCategories={ setCategories } />\r\n          <hr />\r\n\r\n          <ol>\r\n              {\r\n                categories\r\n                .map(category => {\r\n                  return <GifGrid\r\n                                key={ category }\r\n                                category={ category } />\r\n                  }\r\n                )\r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}